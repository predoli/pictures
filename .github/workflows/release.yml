name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-go-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
          
      - name: Build Go backend for ARM64
        run: |
          cd backend
          go mod tidy
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o ../digital-photo-frame-arm64 .
          
      - name: Upload Go binary
        uses: actions/upload-artifact@v4
        with:
          name: go-backend-arm64
          path: digital-photo-frame-arm64

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: build Vue.js frontend
        run: |
          cd frontend
          npm run build
            
      - name: Upload frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/*

  create-debian-package:
    runs-on: ubuntu-latest
    needs: [build-go-backend, build-frontend]
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          
      - name: Install packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev rubygems build-essential
          sudo gem install fpm
          
      - name: Create Debian package
        run: |
          # Debug: List available files
          echo "Available files in workspace:"
          ls -la
          echo "Checking for frontend files..."
          find . -name "*.html" -o -name "*.js" -o -name "*.css" | head -10
          
          # Create package structure
          mkdir -p package-root/opt/photoframe/frontend
          mkdir -p package-root/etc/photoframe
          mkdir -p package-root/usr/bin
          mkdir -p package-root/usr/local/bin
          
          # Copy Go backend binary
          cp digital-photo-frame-arm64 package-root/opt/photoframe/digital-photo-frame-aarch64
          
          # Copy Vue.js frontend files  
          # The frontend artifacts should include index.html and assets
          echo "Looking for frontend files..."
          if [ -f "index.html" ]; then
            echo "Found index.html, copying frontend files"
            # Copy all web files to frontend directory
            for file in index.html *.js *.css *.png *.ico *.svg *.woff *.woff2; do
              [ -e "$file" ] && cp "$file" package-root/opt/photoframe/frontend/
            done
            # Copy assets directory if it exists
            [ -d "assets" ] && cp -r assets package-root/opt/photoframe/frontend/
            echo "Frontend files copied successfully"
          else
            echo "ERROR: index.html not found in downloaded artifacts!"
            echo "Available files:"
            ls -la
            echo "Checking for any HTML files:"
            find . -name "*.html" -type f
            exit 1
          fi
          
          # Copy config
          cp backend/config.yaml.example package-root/etc/photoframe/config.yaml
          
          # Copy launcher scripts
          cp packaging/scripts/start-chromium-photoframe.sh package-root/usr/local/bin/
          cp packaging/scripts/photoframe-launcher.sh package-root/usr/bin/
          chmod +x package-root/usr/local/bin/start-chromium-photoframe.sh
          chmod +x package-root/usr/bin/photoframe-launcher.sh
          
          # Create symlink for easy access
          ln -sf photoframe-launcher.sh package-root/usr/bin/photoframe
          
          # Build Debian package
          VERSION=${GITHUB_REF#refs/tags/v}
          if [ -z "$VERSION" ] || [ "$VERSION" = "$GITHUB_REF" ]; then
            VERSION="0.0.0-$(date +%Y%m%d%H%M%S)"
          fi
          
          fpm -s dir -t deb -n photoframe-pi64 -v "$VERSION" \
            --architecture arm64 \
            --depends "libc6" \
            --depends "chromium-browser" \
            --depends "curl" \
            --description "Digital Photo Frame for Raspberry Pi 64-bit (Chromium)" \
            --url "https://github.com/${{ github.repository }}" \
            --maintainer "${{ github.actor }}" \
            --license "MIT" \
            -C package-root \
            opt etc usr
            
      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: "*.deb"
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: "*.deb"
          body: |
            ## Digital Photo Frame - ARM64 (Chromium)
            
            ### Installation
            ```bash
            wget photoframe-pi64_*.deb
            sudo apt install ./photoframe-pi64_*.deb
            ```
            
            ### Usage
            ```bash
            # Complete launcher (backend + frontend)
            photoframe
            
            # Or run manually:
            # 1. Start backend: cd /etc/photoframe && /opt/photoframe/digital-photo-frame-aarch64
            # 2. Start frontend: /usr/local/bin/start-chromium-photoframe.sh
            ```
            
            ### Features
            - **Chromium-based**: Uses native Chromium browser in kiosk mode
            - **No GTK Issues**: Avoids all Tauri/GTK compatibility problems
            - **Pi Optimized**: Works perfectly on Raspberry Pi 3B+
            - **Fullscreen Kiosk**: True fullscreen mode with no browser chrome
            - **Auto-slideshow**: 15-second automatic image progression
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}